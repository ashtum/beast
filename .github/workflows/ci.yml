name: CI

on: [push, pull_request]

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  runner-selection:
    # runs-on: ubuntu-latest
    runs-on: ${{ github.repository_owner == 'boostorg' && fromJSON('[ "self-hosted", "linux", "x64", "ubuntu-latest-aws" ]') || 'ubuntu-latest' }}
    outputs:
      labelmatrix: ${{ steps.aws_hosted_runners.outputs.labelmatrix }}
    steps:
      - name: AWS Hosted Runners
        id: aws_hosted_runners
        uses: cppalliance/aws-hosted-runners@v1.0.0

  windows:
    if: true
    strategy:
      fail-fast: false
      matrix:
        include:
          - description: msvc-14.2-cxx14-win32
            toolset: msvc-14.2
            cxxstd: "14"
            addrmd: 32
            os: windows-2019
            cxxflags: ""
            supported: true
          - description: msvc-14.2-cxx17-win32
            toolset: msvc-14.2
            cxxstd: "17"
            addrmd: 32
            os: windows-2019
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          - description: msvc-14.2-cxx20-win32
            toolset: msvc-14.2
            cxxstd: "latest"
            addrmd: 32
            os: windows-2019
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          - description: msvc-14.2-cxx14-win64
            toolset: msvc-14.2
            cxxstd: "14"
            addrmd: 64
            os: windows-2019
            cxxflags: ""
            supported: true
          - description: msvc-14.2-cxx17-win64
            toolset: msvc-14.2
            cxxstd: "17"
            addrmd: 64
            os: windows-2019
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          - description: msvc-14.2-cxx20-win64
            toolset: msvc-14.2
            cxxstd: "latest"
            addrmd: 64
            os: windows-2019
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          # - description: msvc-14.3-cxx14-win32
          #   toolset: msvc-14.3
          #   cxxstd: "14"
          #   addrmd: 32
          #   os: windows-2022
          #   cxxflags: ""
          #   supported: true
          # - description: msvc-14.3-cxx17-win32
          #   toolset: msvc-14.3
          #   cxxstd: "17"
          #   addrmd: 32
          #   os: windows-2022
          #   cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
          #   supported: true
          - description: msvc-14.3-cxx20-win32
            toolset: msvc-14.3
            cxxstd: "20"
            addrmd: 32
            os: windows-2022
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          # - description: msvc-14.3-cxx14-win64
          #   toolset: msvc-14.3
          #   cxxstd: "14"
          #   addrmd: 64
          #   os: windows-2022
          #   cxxflags: ""
          #   supported: true
          # - description: msvc-14.3-cxx17-win64
          #   toolset: msvc-14.3
          #   cxxstd: "17"
          #   addrmd: 64
          #   os: windows-2022
          #   cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
          #   supported: true
          - description: msvc-14.3-cxx20-win64
            toolset: msvc-14.3
            cxxstd: "20"
            addrmd: 64
            os: windows-2022
            cxxflags: "cxxflags=-D_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1"
            supported: true
          - toolset: gcc
            cxxstd: "11,14,17,2a"
            addrmd: 64
            os: windows-2019
            cxxflags: "cxxflags=-Wa,-mbig-obj"
            supported: "Too many unknowns to get this compiler working - gcc-8.1"

    needs: [runner-selection]
    runs-on: ${{ fromJSON(needs.runner-selection.outputs.labelmatrix)[matrix.os] }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OpenSSL
        shell: cmd
        run: |
          echo Install choco
          powershell -Command iex ((new-object net.webclient).DownloadString('https://chocolatey.org/install.ps1'))
          if "${{matrix.addrmd}}" == "64" (
            choco install --no-progress -y openssl --x64 --version 3.2.0
          )
          if "${{matrix.addrmd}}" == "32" (
            ; as of 17.08.23 openssl 3 doesn't support x86
            set openssl_install_dir="C:\\Program Files (x86)\\OpenSSL-Win32"
            choco install --no-progress -y openssl --forcex86 --version 1.1.1.2100
          )

          if "${{matrix.addrmd}}" == "64" (
            if exist "C:\Program Files\OpenSSL\" (
            set openssl_install_dir="C:\\Program Files\\OpenSSL"
            ) else (
            set openssl_install_dir="C:\\Program Files\\OpenSSL-Win64"
            )
          )
          mklink /D C:\OpenSSL %openssl_install_dir%
          refreshenv
          set

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          echo using openssl : : ^<include^>"C:/OpenSSL/include" ^<search^>"C:/OpenSSL/lib" ^<ssl-name^>libssl ^<crypto-name^>libcrypto : ; >> %USERPROFILE%\user-config.jam
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: bash
        run: |
          echo "current directory: $(pwd)"
          cd ../boost-root
          if [[ "${{matrix.supported}}" != "true" ]] ; then
            echo "This configuration is not supported because ${{matrix.supported}}"
            exit 0
          fi
          toolsets=$(sed 's/,/ /g' <<<"${{matrix.toolset}}")
          standards=$(sed 's/,/ /g' <<<"${{matrix.cxxstd}}")
          address_models=$(sed 's/,/ /g' <<<"${{matrix.addrmd}}")
          variants="debug release"
          cd libs/$LIBRARY
          for toolset in ${toolsets} ; do
            for standard in ${standards} ; do
              for address_model in ${address_models} ; do
                for variant in ${variants} ; do
                  echo "running: ${toolset} ${standard} ${address_model} ${variant}"
                  ../../b2 -j3 ${{matrix.cxxflags}} test toolset=${toolset} cxxstd=${standard} address-model=${address_model} variant=${variant} || exit $?
                done
              done
            done
          done
